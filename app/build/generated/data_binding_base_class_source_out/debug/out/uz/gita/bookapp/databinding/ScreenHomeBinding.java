// Generated by view binder compiler. Do not edit!
package uz.gita.bookapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.gita.bookapp.R;

public final class ScreenHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView bookmark;

  @NonNull
  public final TextView lastReadBookAuthor;

  @NonNull
  public final TextView lastReadBookTitle;

  @NonNull
  public final ConstraintLayout lastReadedBook;

  @NonNull
  public final ImageView notifications;

  @NonNull
  public final TextView readedPercentage;

  @NonNull
  public final RecyclerView recomendationRecyclerView;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final LinearLayout topicLayout;

  @NonNull
  public final LinearLayoutCompat viewLayout;

  private ScreenHomeBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView bookmark,
      @NonNull TextView lastReadBookAuthor, @NonNull TextView lastReadBookTitle,
      @NonNull ConstraintLayout lastReadedBook, @NonNull ImageView notifications,
      @NonNull TextView readedPercentage, @NonNull RecyclerView recomendationRecyclerView,
      @NonNull SearchView searchView, @NonNull LinearLayout topicLayout,
      @NonNull LinearLayoutCompat viewLayout) {
    this.rootView = rootView;
    this.bookmark = bookmark;
    this.lastReadBookAuthor = lastReadBookAuthor;
    this.lastReadBookTitle = lastReadBookTitle;
    this.lastReadedBook = lastReadedBook;
    this.notifications = notifications;
    this.readedPercentage = readedPercentage;
    this.recomendationRecyclerView = recomendationRecyclerView;
    this.searchView = searchView;
    this.topicLayout = topicLayout;
    this.viewLayout = viewLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScreenHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScreenHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.screen_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScreenHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookmark;
      ImageView bookmark = ViewBindings.findChildViewById(rootView, id);
      if (bookmark == null) {
        break missingId;
      }

      id = R.id.last_read_book_author;
      TextView lastReadBookAuthor = ViewBindings.findChildViewById(rootView, id);
      if (lastReadBookAuthor == null) {
        break missingId;
      }

      id = R.id.last_read_book_title;
      TextView lastReadBookTitle = ViewBindings.findChildViewById(rootView, id);
      if (lastReadBookTitle == null) {
        break missingId;
      }

      id = R.id.last_readed_book;
      ConstraintLayout lastReadedBook = ViewBindings.findChildViewById(rootView, id);
      if (lastReadedBook == null) {
        break missingId;
      }

      id = R.id.notifications;
      ImageView notifications = ViewBindings.findChildViewById(rootView, id);
      if (notifications == null) {
        break missingId;
      }

      id = R.id.readed_percentage;
      TextView readedPercentage = ViewBindings.findChildViewById(rootView, id);
      if (readedPercentage == null) {
        break missingId;
      }

      id = R.id.recomendation_recycler_view;
      RecyclerView recomendationRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recomendationRecyclerView == null) {
        break missingId;
      }

      id = R.id.search_view;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.topic_layout;
      LinearLayout topicLayout = ViewBindings.findChildViewById(rootView, id);
      if (topicLayout == null) {
        break missingId;
      }

      id = R.id.view_layout;
      LinearLayoutCompat viewLayout = ViewBindings.findChildViewById(rootView, id);
      if (viewLayout == null) {
        break missingId;
      }

      return new ScreenHomeBinding((ConstraintLayout) rootView, bookmark, lastReadBookAuthor,
          lastReadBookTitle, lastReadedBook, notifications, readedPercentage,
          recomendationRecyclerView, searchView, topicLayout, viewLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
